# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	## Set this to reflect the location of the www directory within the omniwallet repo.
	root /home/cmlacy/omniwallet/www/;
	index index.htm;

	#Re-route nested routed through index
	location / {
	    try_files $uri $uri/ /index.html =404;
	}

	location ~ "^/wallet/$" {
	    return 301 /wallet/overview;
	}

	# Make site accessible from http://localhost/
	server_name localhost;

	location ~ "^/v1/transaction/values.json$" {
		alias /var/lib/omniwallet/www/values.json;
	}

	location ~ "^/v1/system/stats.json$" {
		alias /var/lib/omniwallet/www/stats.json;
	}

	location ~ "^/v1/system/revision.json$" {
		alias /var/lib/omniwallet/www/revision.json;
	}

	location ~ "^/v1/exchange/offers/(.*)$" {
		alias /var/lib/omniwallet/www/offers/$1;
	}

	location ~ "^/v1/transaction/general/(.*)$" {
		alias /var/lib/omniwallet/www/general/$1;
	}

	location ~ "^/v1/transaction/tx/(.*)$" {
		alias /var/lib/omniwallet/www/tx/$1;
	}

	location ~ "^/v1/address/verify/(.*)$" {
		alias /var/lib/omniwallet/www/mastercoin_verify/addresses/$1;
	}

	location ~ "^/v1/transaction/verify/(.*)$" {
		alias /var/lib/omniwallet/www/mastercoin_verify/transactions/$1;
	}

	include uwsgi_params;
        uwsgi_param SCRIPT_NAME   $app;
        uwsgi_param UWSGI_MODULE   $app;
        uwsgi_param UWSGI_CALLABLE   "${app}_handler";

	set $PORT 1088;
    location /v1/address/addr/ {
        set   $app   get_balance;
        uwsgi_pass   127.0.0.1:$PORT;
    }

    location /v1/transaction/validateaddr/ {
        set   $app   validateaddr;
        uwsgi_pass   127.0.0.1:$PORT;
    }

    location /v1/transaction/send/ {
        set   $app   send;
        uwsgi_pass   127.0.0.1:$PORT;
    }

    location /v1/exchange/sell/ {
        set   $app   sell;
        uwsgi_pass   127.0.0.1:$PORT;
    }

    location /v1/exchange/accept/ {
        set   $app   accept;
        uwsgi_pass   127.0.0.1:$PORT;
	}

	location /v1/transaction/pushtx/ {
        set   $app   pushtx;
        uwsgi_pass   127.0.0.1:$PORT;
	}

    location /v1/exchange/offers {
        set   $app   offers;
        uwsgi_pass   127.0.0.1:$PORT;
    }

    location = /v1/user/wallet { rewrite ^ /v1/user/wallet/; }
    location /v1/user/wallet { try_files $uri @flask_user_service; }
    location @flask_user_service {
      include uwsgi_params;
      uwsgi_param SCRIPT_NAME /v1/user/wallet;
      uwsgi_param UWSGI_MODULE user_service;
      uwsgi_param UWSGI_CALLABLE app;
      uwsgi_modifier1 30;
      uwsgi_pass 127.0.0.1:$PORT;
    }

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
#
